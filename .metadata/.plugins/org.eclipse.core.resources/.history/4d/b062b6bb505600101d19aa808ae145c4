package Linked;

class Node{
	int data;
	Node next;
	
	Node(int data1, Node next1){
		this.data = data1;
		this.next = next1;
	}
	
	Node(int data1){
		this.data = data1;
		this.next = null;
	}
}

public class LinkedList {
	
	private static Node converttll(int[] arr) {
		Node head = new Node(arr[0]);
		Node mover = head;
		for(int i= 1 ;i < arr.length;i++) {
			Node temp = new Node(arr[i]);
			mover.next = temp;
			mover = temp;
		}
		return head;
		
	}
	
	private static int lengthofll(Node head) {
		int cnt = 0;
		Node temp = head;
		while(temp != null) {
			cnt++;
			temp = temp.next;
		}
		return cnt;
	}
	
	private static boolean searchllele(Node head, int val) {
		Node temp = head;
		while(temp != null) {
			if(temp.data == val) return true;
			temp = temp.next;
		}
		return false;
	}
	
	private static void printll(Node head) {
		Node temp = head;
		while(temp != null) {
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
		
	}
	
	private static Node addele(Node head, int n) {
		Node add = new Node(n);
		Node temp = head;
		while(temp.next != null) {
			temp = temp.next;
		}
		temp.next = add;
		return head;
	}
	
	private static Node delen(Node Head, int n) {
		Node temp1 = Head;
		if(temp1 == null) return null;
		while(temp1.next.data != n) {
			temp1 = temp1.next;
			
		}
		temp1.next = temp1.next.next;
		return Head;
	}
	
	private static Node insertval(Node head, int pos, int val) {
		 Node add1 = new Node(val);

		  

		    Node temp1 = head;
		    int cnt = 1;

		   
		    while (temp1 != null && cnt < pos - 1) {
		        temp1 = temp1.next;
		        cnt++;
		    }

		    
		    add1.next = temp1.next;
		    temp1.next = add1;

		    return temp1;
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {1,2,4,6,7};
		Node head = converttll(arr);
		
		 printll(head);
		 System.out.println();
		 
//		 Node tem1 = delen(head, 3);
//		 printll(tem1);
		 int val = 3;
		 Node temp1 = insertval(head, 3, val);
		 printll(temp1);
		 
		

	}

}
